{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { version } from '../package.json';\n\nclass ParticleLaunch extends karas.Component {\n  componentDidMount() {\n    let { props } = this;\n    let { list, num = 0, interval = 300, delay = 0 } = props;\n    if(num === 'infinity' || num === 'Infinity') {\n      num = Infinity;\n    }\n    let dataList = [];\n    let count = 0, i = 0, length = list.length, first = true;\n    let fake = this.ref.fake;\n    fake.frameAnimate(diff => {\n      if(delay > 0) {\n        delay -= diff;\n      }\n      if(delay <= 0) {\n        diff += delay;\n        count += diff;\n        delay = 0;\n        // 已有的每个粒子时间增加计算位置，结束的则消失\n        for(let j = dataList.length - 1; j >= 0; j--) {\n          let item = dataList[j];\n          item.time += diff;\n          if(item.time >= item.duration) {\n            dataList.splice(j, 1);\n          }\n          else {\n            let { x, y, width, height, dx, dy, time, duration, easing } = item;\n            let percent = time / duration;\n            if(easing) {\n              percent = easing(percent);\n            }\n            item.nowX = x + dx * percent - width * 0.5;\n            item.nowY = y + dy * percent - height * 0.5;\n          }\n        }\n        // 每隔一段时间增加一个粒子，或者第一个不需要等待\n        if(count >= interval || first) {\n          if(first) {\n            first = false;\n          }\n          else {\n            count -= interval;\n          }\n          i++;\n          i %= length;\n          dataList.push(this.genItem(list[i]));\n        }\n      }\n    });\n    let a = fake.animate([\n      {\n        opacity: 1,\n      },\n      {\n        opacity: 0,\n      }\n    ], {\n      duration: 1000,\n      delay,\n      iterations: Infinity,\n    });\n    fake.render = (renderMode, lv, ctx) => {\n      let { sx, sy } = fake;\n      let alpha = ctx.globalAlpha;\n      let time = a.currentTime - delay;\n      if(time < 0) {\n        return;\n      }\n      dataList.forEach(item => {\n        if(item.source) {\n          let blink = item.blink;\n          let opacity = alpha;\n          if(blink) {\n            let num = Math.floor(time / blink.duration);\n            let diff = time % blink.duration;\n            // 偶数from2to，奇数to2from\n            if(num % 2 === 0) {\n              opacity *= blink.from - (blink.from - blink.to) * diff / blink.duration;\n            }\n            else {\n              opacity *= blink.to + (blink.from - blink.to) * diff / blink.duration;\n            }\n          }\n          ctx.globalAlpha = opacity;\n          ctx.drawImage(item.source, item.nowX + sx, item.nowY + sy, item.width, item.height);\n        }\n      });\n      ctx.globalAlpha = alpha;\n    };\n  }\n\n  genItem(item) {\n    let { width, height } = this;\n    let o = {\n      x: item.x * width,\n      y: item.y * height,\n      time: 0,\n    };\n    if(Array.isArray(item.duration)) {\n      o.duration = (item.duration[0] + Math.random() * (item.duration[1] - item.duration[0]));\n    }\n    else {\n      o.duration = item.duration;\n    }\n    if(Array.isArray(item.width)) {\n      o.width = item.width[0] + Math.random() * (item.width[1] - item.width[0]);\n    }\n    else {\n      o.width = item.width;\n    }\n    if(item.ar) {\n      o.height = o.width * item.ar;\n    }\n    else {\n      if(Array.isArray(item.height)) {\n        o.height = item.height[0] + Math.random() * (item.height[1] - item.height[0]);\n      }\n      else {\n        o.height = item.height;\n      }\n    }\n    let deg = 0;\n    if(Array.isArray(item.deg)) {\n      deg = (item.deg[0] + Math.random() * (item.deg[1] - item.deg[0]));\n    }\n    else {\n      deg = item.deg;\n    }\n    let distance = 0;\n    if(Array.isArray(item.distance)) {\n      distance = (item.distance[0] + Math.random() * (item.distance[1] - item.distance[0])) * width;\n    }\n    else {\n      distance = item.distance * width;\n    }\n    if(deg >= 270) {\n      deg = 360 - deg;\n      deg = karas.math.geom.d2r(deg);\n      o.tx = o.x + distance * Math.cos(deg);\n      o.ty = o.y - distance * Math.sin(deg);\n    }\n    else if(deg >= 180) {\n      deg = deg - 180;\n      deg = karas.math.geom.d2r(deg);\n      o.tx = o.x - distance * Math.cos(deg);\n      o.ty = o.y - distance * Math.sin(deg);\n    }\n    else if(deg >= 90) {\n      deg = 180 - deg;\n      deg = karas.math.geom.d2r(deg);\n      o.tx = o.x - distance * Math.cos(deg);\n      o.ty = o.y + distance * Math.sin(deg);\n    }\n    else {\n      deg = karas.math.geom.d2r(deg);\n      o.tx = o.x + distance * Math.cos(deg);\n      o.ty = o.y + distance * Math.sin(deg);\n    }\n    o.dx = o.tx - o.x;\n    o.dy = o.ty - o.y;\n    if(item.blink) {\n      let { from, to, duration } = item.blink;\n      if(Array.isArray(duration)) {\n        duration = duration[0] + Math.random() * (duration[1] - duration[0]);\n      }\n      if(Array.isArray(from) && Array.isArray(to)) {\n        o.blink = {\n          from: from[0] + (Math.random() * from[1] - from[0]),\n          to: to[0] + (Math.random() * to[1] - to[0]),\n          duration,\n        };\n      }\n    }\n    if(item.blink) {\n      let { from, to, duration } = item.blink;\n      if(Array.isArray(duration)) {\n        duration = duration[0] + Math.random() * (duration[1] - duration[0]);\n      }\n      if(Array.isArray(from) && Array.isArray(to)) {\n        o.blink = {\n          from: from[0] + (Math.random() * from[1] - from[0]),\n          to: to[0] + (Math.random() * to[1] - to[0]),\n          duration,\n        };\n      }\n    }\n    if(item.easing) {\n      item.easing = karas.animate.easing.getEasing(item.easing);\n    }\n    if(item.url) {\n      karas.inject.measureImg(item.url, function(res) {\n        if(res.success) {\n          o.source = res.source;\n        }\n      });\n    }\n    return o;\n  }\n\n  render() {\n    return <div>\n      <$polyline ref=\"fake\"/>\n    </div>;\n  }\n}\n\nParticleLaunch.version = version;\n\nexport default ParticleLaunch;\n"],"names":["ParticleLaunch","props","list","num","interval","delay","dataList","count","i","length","first","fake","ref","frameAnimate","diff","j","item","time","duration","splice","x","y","width","height","dx","dy","easing","percent","nowX","nowY","push","genItem","a","animate","opacity","iterations","Infinity","render","renderMode","lv","ctx","sx","sy","alpha","globalAlpha","currentTime","forEach","source","blink","Math","floor","from","to","drawImage","o","Array","isArray","random","ar","deg","distance","karas","math","geom","d2r","tx","cos","ty","sin","getEasing","url","inject","measureImg","res","success","Component","version"],"mappings":"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"}